#!/usr/bin/env python3
# -*- coding: utf-8 -*-

from ast import Not
import enum
from statistics import mean
import sys
from random import sample
# from farm_code_W.reconstruct.train.Iteration_train import Accuracy
sys.path.append("../")
import os
import numpy as np
import random
import torch

import matplotlib.pyplot as plt
from sklearn.metrics import confusion_matrix, f1_score, accuracy_score, classification_report
from torch.utils.data.dataset import Dataset
import time
import glob

import os
import torch



n=1
Accuracy = 0

Model_Dir = '/home/kumarv/pravirat/Realsat_labelling/ASIA_farm/models/3channel_fullconnnect'
## Parameters
experiment_id = '10models_X'
learning_rate = 0.001
patch_size = 64
inchannels = 1
outchannels = 3 
# 0 represents unconfirmed
# 1 represents confirmed as farm
# 2 represents confirmed as not farm
no_epochs = 500
lower_lim = 350
upper_lim = 400
batch_size = 256
continent_no = 1
bias =  0.0000000175
farm_label_array_path = '/home/kumarv/pravirat/Realsat_labelling/ASIA_farm/farm_labels_asia.npy'
warped_data_path = '/home/kumarv/pravirat/Realsat_labelling/WARPED_DATA/350_400_stage2_warped_64x64/'
continent_info_array_path = '/home/kumarv/pravirat/Realsat_labelling/continent_info.npy'
 
# create model directory if it doesnt exist
if not os.path.exists(Model_Dir):
    os.makedirs(Model_Dir)


# define deep learning model architecture


class CNN_reconstruct(torch.nn.Module):
    def __init__(self, in_channels, out_channels):
        super(CNN_reconstruct, self).__init__()     
        self.conv1_1 = torch.nn.Conv2d(in_channels, 16, 3, padding=1)
        self.conv1_2 = torch.nn.Conv2d(16, 16, 3, padding=1)
        self.conv2_1 = torch.nn.Conv2d(16, 32, 3, padding=1)
        self.conv2_2 = torch.nn.Conv2d(32, 32, 3, padding=1)
        self.conv3_1 = torch.nn.Conv2d(32, 64, 3, padding=1)
        self.conv3_2 = torch.nn.Conv2d(64, 64, 3, padding=1)
        self.fc = torch.nn.Linear(4096, 4096)

        self.upfc = torch.nn.Linear(4096, 4096)
        self.unpool3 = torch.nn.ConvTranspose2d(64 , 64, kernel_size=2, stride=2)
        self.upconv3_1 = torch.nn.Conv2d(64, 64, 3, padding=1)
        self.upconv3_2 = torch.nn.Conv2d(64, 32, 3, padding=1)
        self.unpool2 = torch.nn.ConvTranspose2d(32 , 32, kernel_size=2, stride=2)
        self.upconv2_1 = torch.nn.Conv2d(32, 32, 3, padding=1)
        self.upconv2_2 = torch.nn.Conv2d(32, 16, 3, padding=1)
        self.unpool1 = torch.nn.ConvTranspose2d(16 , 16, kernel_size=2, stride=2)
        self.upconv1_1 = torch.nn.Conv2d(16, 16, 3, padding=1)
        self.upconv1_2 = torch.nn.Conv2d(16, in_channels, 3, padding=1)
        
        self.classification_layer = torch.nn.Linear(4096, out_channels)

        self.maxpool = torch.nn.MaxPool2d(2)
        self.relu = torch.nn.ReLU(inplace=True)
        self.softmax = torch.nn.Softmax()
        for m in self.modules():
            if isinstance(m, torch.nn.Conv2d) or isinstance(m, torch.nn.Linear):
                torch.nn.init.xavier_uniform_(m.weight)
        
    def forward(self,x):
        x = x.view(-1, 1, patch_size, patch_size)

        conv1 = self.maxpool(self.relu(self.conv1_2(self.relu(self.conv1_1(x)))))
        conv2 = self.maxpool(self.relu(self.conv2_2(self.relu(self.conv2_1(conv1)))))
        conv3 = self.maxpool(self.relu(self.conv3_2(self.relu(self.conv3_1(conv2)))))                                     
        fc = self.relu(self.fc(conv3.view(-1,4096)))

        classification = self.classification_layer(fc)

        upfc = self.relu(self.upfc(fc))
        upconv3 = self.relu(self.upconv3_2(self.relu(self.upconv3_1(self.unpool3(upfc.view(-1,64,8,8))))))
        upconv2 = self.relu(self.upconv2_2(self.relu(self.upconv2_1(self.unpool2(upconv3)))))
        out = self.upconv1_2(self.relu(self.upconv1_1(self.unpool1(upconv2))))
        out = out.view(-1, 1, patch_size, patch_size)
        
        return classification,out

def mse_loss(input_image, target, ignored_index, reduction):
    mask = input_image == ignored_index
    out = (input_image[~mask]-target[~mask])**2
    if reduction == "mean":
        return out.mean()
    elif reduction == "None":
        return out
                                                    
# define function for creating fraction map and label for a particular ID
def create_frac_map_and_label(ID,label_array):
#     ID = path.split('/')[-1].split('_')[-4] 
    strID='test'
    if(len(str(ID))!=6):
        complete = 6-len(str(ID))
        strID = '0'*complete+str(ID)
    else:
        strID = str(ID)
    image = np.load(warped_data_path + 'ID_' + strID + '_orbit_updated_warped.npy')
    
    # converting labels to binary, i.e land or water
    image[image == 1] = 0 
    image[image == 2] = 1 
        
    frac_map_image = np.mean(image,axis = 0)

    frac_map = np.array(frac_map_image).astype(np.float32)
    label_image = label_array[int(ID)]

    return frac_map, label_image, ID

# create dataloader class 
class CLASSIFIER(Dataset):

    def __init__(self, frac_maps, label_images, IDs):
        self.frac_maps = frac_maps
        self.label_images = label_images
        self.IDs = IDs

    def __len__(self):
        return len(self.label_images)

    def __getitem__(self, index):
        return self.frac_maps[index], self.label_images[index],self.IDs[index]

# define loss function
criterion = torch.nn.CrossEntropyLoss()

criterion_classification = torch.nn.CrossEntropyLoss()


# def testAccuracy():
    
#     model.eval()
#     accuracy = 0.0
#     total = 0.0
    
#     with torch.no_grad():
#         for data in test_loader:
#             images, labels = data
#             # run the model on the test set to predict labels
#             outputs = model(images)
#             # the label with the highest energy will be our prediction
#             _, predicted = torch.max(outputs.data, 1)
#             total += labels.size(0)
#             accuracy += (predicted == labels).sum().item()
    
#     # compute the accuracy over all test images
#     accuracy = (100 * accuracy / total)
#     return(accuracy)


# criterion = torch.nn.BCELoss()

# build model
print("BUILD MODEL")
model = CNN_reconstruct(in_channels=inchannels, out_channels=outchannels)
model = model.to('cuda')
optimizer = torch.optim.SGD(model.parameters(), lr=learning_rate)

# get list of paths to use for training 
farm_label_array = np.load(farm_label_array_path)

paths_list = glob.glob(os.path.join(warped_data_path + '*.npy')) # gets all paths

#subset paths that lie in continent of interest
continent_info = np.load(continent_info_array_path)
continent_path_list = []
continent_ID_list = []
for path in paths_list:
    ID = path.split('/')[-1].split('_')[-4]
    if(continent_info[int(ID)] == continent_no):
        continent_path_list.append(path)
        ## get all ID from certain continent
        continent_ID_list.append(int(ID))

print("EXCLUDE HARD TO DEFINE=============================================================")
print(len(continent_ID_list))

# cantdifine = [720690,730116,691971,726576,684668,709692,605971,723206,609487,619521,650182,618360,739550,602847,619168,674333,649051,605654,623910,608219,708037,607852,649654,612060,605485,540938,607212,690253,613660,675170,693737,689493,613210,698782,731414,729211,615576,611416,681027,609725,688859,605977,614444,669402,683473,738677,701327,611922,719753,615201,732522,612516,539334,713031,713419,615553,732651,683009,717825, 717829, 734214, 616975, 720406, 730137, 734746, 676379, 655900, 676383, 649253, 677927, 683566, 601138, 601652, 601653, 703551, 522323, 684630, 611930, 692322, 618086, 737383, 733288, 678508, 687724, 691828, 701046, 709752, 637051, 648827, 641150, 619135, 730242, 689802, 616590, 648850, 739484, 670876, 689310, 615588, 692904, 602283, 716973, 603315, 610486, 613566, 675016, 680146, 670936, 611032, 701149, 605410, 606951, 732907, 607478, 636150, 730361, 703738, 695037, 601348, 700188, 652068, 602928, 604980, 710979, 721228, 602957, 650604, 650104, 638840, 702336, 601987, 649604, 605583, 614800, 622486, 739226, 652193, 691107, 730533, 724903, 718248, 603580, 638403, 683459, 700872, 603091, 668642, 611813, 719340, 689652, 719348, 635898]
# cantdifine = [90505,96982,99136,292772,92959,96615,110557,116048,91221,90413,84463,88517,33808,194625,194617,193765,191053,188040,187109,186803,675036,685465,693703,694365,694667,721984,31445,30094,19054,294610,293716,283563,282272,277527,257707,235017,234832,230203,221518,20062,75008,135971,105732,88707,134827,90972,92343,90994,140623,140495,294610,293716,135086,]
# cantdifine = [200265,199544,199414,164460,166329,161429,116508,129686,135921,141483,141490,141770,142217,150121,157535,157550,116094,90505,96982,99136,292772,92959,96615,110557,116048,91221,90413,84463,88517,33808,194625,194617,193765,191053,188040,187109,186803,675036,685465,693703,694365,694667,721984,31445,30094,19054,294610,293716,283563,282272,277527,257707,235017,234832,230203,221518,20062,75008,135971,105732,88707,134827,90972,92343,90994,140623,140495,294610,293716,135086,]
# cantdifine = [349395,280858,293708,210146,209155,209987,209996,208104,206626,75394,105734,33905,116593,33659,192533,38062,200633,206392,214125,230055,33659,33905,112508,143035,161110,113118,157535,157550,201676,214405,221181,230223,232166,264609,259333,137365,94710,92711,92119,33659,65294,116936,113801,138790,117241,200265,199544,199414,164460,166329,161429,116508,129686,135921,141483,141490,141770,142217,150121,157535,157550,116094,90505,96982,99136,292772,92959,96615,110557,116048,91221,90413,84463,88517,33808,194625,194617,193765,191053,188040,187109,186803,675036,685465,693703,694365,694667,721984,31445,30094,19054,294610,293716,283563,282272,277527,257707,235017,234832,230203,221518,20062,75008,135971,105732,88707,134827,90972,92343,90994,140623,140495,294610,293716,135086,]
cantdifine = [283332,282127,250085,237530,265270,237730,294099,241827,294132,205533,203729,204960,201031,207690,202107,221121,158617,164221,230525,139605,142040,203728,202940,194754,291664,292538,194285,110446,78900,107850,76352,59451,92779,51599,75100,75507,75471,38362,42073,45678,84014,134600,135553,207917,207783,207808,75192,40794,40969,40702,43246,29537,112983,102725,94037,93351,349395,280858,293708,210146,209155,209987,209996,208104,206626,75394,105734,33905,116593,33659,192533,38062,200633,206392,214125,230055,33659,33905,112508,143035,161110,113118,157535,157550,201676,214405,221181,230223,232166,264609,259333,137365,94710,92711,92119,33659,65294,116936,113801,138790,117241,200265,199544,199414,164460,166329,161429,116508,129686,135921,141483,141490,141770,142217,150121,157535,157550,116094,90505,96982,99136,292772,92959,96615,110557,116048,91221,90413,84463,88517,33808,194625,194617,193765,191053,188040,187109,186803,675036,685465,693703,694365,694667,721984,31445,30094,19054,294610,293716,283563,282272,277527,257707,235017,234832,230203,221518,20062,75008,135971,105732,88707,134827,90972,92343,90994,140623,140495,294610,293716,135086,]

cantdifine = list(set(cantdifine))

continent_ID_list = [x for x in continent_ID_list if x not in cantdifine]
print(len(continent_ID_list))

print("=============================================================")

farm_conti_list1 = []
farm_conti_list2 = []


torch.cuda.empty_cache()
not_farm_conti_list = []

# get IDs where we know it is farm and subset those poths
farm_IDs = (np.where(farm_label_array == 1)[0]).tolist() # has all the IDs that are farms
riveri_IDs = (np.where(farm_label_array == 2)[0]).tolist() # has all the IDs that are farms
# farm_IDs = [187073,31629,31612,31390,31365,30375,29964,29955,29830,29712,29333,19857,19723,19575,19529,19528,19337,18918,18168,29524, 29756, 29931, 31723, 31741, 31916, 32113, 32693,38858,41846, 44883, 45585, 46180, 51861, 51863, 52927,53489, 53729, 53787, 54103, 54163, 54184, 54248, 54679, 54706, 54757, 54764, 54791, 55016, 55082, 55084, 55097, 55106, 60175, 60198, 60369, 60406, 60421, 60430, 60767, 60777, 61383, 61529, 61607, 61737, 61931, 62107, 62178, 62246, 62280, 62308, 62434, 62697, 62876, 62973, 63015, 63116, 53729, 65237, 74110,75783, 76276, 76620, 77551, 77704, 77741, 79892, 80704, 80718, 81225, 84225, 84529, 84578, 84823, 85749, 86188, 86432, 86750, 87101, 87199,90465, 90961,97104,107776, 108461, 108687, 108798, 108908, 108959, 109002, 109035, 109942, 112250, 112488, 112973, 112981, 113567, 114128, 114484, 114486, 114574, 114810, 115019, 115124, 115361, 115843, 116183, 116231, 116555, 117639, 118052, 118114, 124958, 125830, 126187, 126525, 126663, 127039, 127242, 130058, 130314, 130489, 130822, 130850, 133987, 134197, 140791, 154756]
# farm_IDs = [42634,41903,41897,41130,41843,40824,43516,40274,45053,44797,41392,166892,169128,169117,39217,169413,169439,169465,169236,169496,169503,40344,169633,169659,169742,169744,172123,181059,187745,31629,31612,31390,31365,30375,29964,29955,29830,29712,29333,19857,19723,19575,19529,19528,19337,18918,18168,29524, 29756, 29931, 31723, 31741, 31916, 32113, 32693,38858,41846, 44883, 45585, 46180, 51861, 51863, 52927,53489, 53729, 53787, 54103, 54163, 54184, 54248, 54679, 54706, 54757, 54764, 54791, 55016, 55082, 55084, 55097, 55106, 60175, 60198, 60369, 60406, 60421, 60430, 60767, 60777, 61383, 61529, 61607, 61737, 61931, 62107, 62178, 62246, 62280, 62308, 62434, 62697, 62876, 62973, 63015, 63116, 53729, 65237, 74110,75783, 76276, 76620, 77551, 77704, 77741, 79892, 80704, 80718, 81225, 84225, 84529, 84578, 84823, 85749, 86188, 86432, 86750, 87101, 87199,90465, 90961,97104,107776, 108461, 108687, 108798, 108908, 108959, 109002, 109035, 109942, 112250, 112488, 112973, 112981, 113567, 114128, 114484, 114486, 114574, 114810, 115019, 115124, 115361, 115843, 116183, 116231, 116555, 117639, 118052, 118114, 124958, 125830, 126187, 126525, 126663, 127039, 127242, 130058, 130314, 130489, 130822, 130850, 133987, 134197, 140791, 154756]
# farm_IDs = [283505,269563,269611,269852,269990,270315,270319,270582,270588,270627,270900,270939,282082,282066,282105,266896,267058,267089,267338,267492,267621,267664,267713,267889,268239,268626,269100,269458,265503,265563,265685,265704,265745,265922,266131,266237,266471,266481,266528,266576,266713,266645,266775,188536,193338,193658,193753,193913,235636,235640,235644,235765,239369,249065,261211,261289,261510,261597,261613,261740,261775,261790,262242,262385,262895,262950,263132,263275,263279,263393,263438,263485,263538,263624,263690,263764,263796,263885,263947,263972,263995,264335,264406,264649,264674,264791,264902,264910,264968,265064,265244,265377,265483,265487,188248,42634,41903,41897,41130,41843,40824,43516,40274,45053,44797,41392,166892,169128,169117,39217,169413,169439,169465,169236,169496,169503,40344,169633,169659,169742,169744,172123,181059,187745,31629,31612,31390,31365,30375,29964,29955,29830,29712,29333,19857,19723,19575,19529,19528,19337,18918,18168,29524, 29756, 29931, 31723, 31741, 31916, 32113, 32693,38858,41846, 44883, 45585, 46180, 51861, 51863, 52927,53489, 53729, 53787, 54103, 54163, 54184, 54248, 54679, 54706, 54757, 54764, 54791, 55016, 55082, 55084, 55097, 55106, 60175, 60198, 60369, 60406, 60421, 60430, 60767, 60777, 61383, 61529, 61607, 61737, 61931, 62107, 62178, 62246, 62280, 62308, 62434, 62697, 62876, 62973, 63015, 63116, 53729, 65237, 74110,75783, 76276, 76620, 77551, 77704, 77741, 79892, 80704, 80718, 81225, 84225, 84529, 84578, 84823, 85749, 86188, 86432, 86750, 87101, 87199,90465, 90961,97104,107776, 108461, 108687, 108798, 108908, 108959, 109002, 109035, 109942, 112250, 112488, 112973, 112981, 113567, 114128, 114484, 114486, 114574, 114810, 115019, 115124, 115361, 115843, 116183, 116231, 116555, 117639, 118052, 118114, 124958, 125830, 126187, 126525, 126663, 127039, 127242, 130058, 130314, 130489, 130822, 130850, 133987, 134197, 140791, 154756]
# farm_IDs = [110044,109051,108729,108716,107966,107491,78373,80719,84918,85340,86699,88400,88977,88988,88995,90320,90477,92403,93465,96990,99367,111668,112464,113877,60164,60490,60738,61122,61235,61785,62255,62514,63115,74726,76500,77266,40227,50108,52705,54440,55042,55107,55164,55452,55669,55749,34718,32112,29961,19198,283505,269563,269611,269852,269990,270315,270319,270582,270588,270627,270900,270939,282082,282066,282105,266896,267058,267089,267338,267492,267621,267664,267713,267889,268239,268626,269100,269458,265503,265563,265685,265704,265745,265922,266131,266237,266471,266481,266528,266576,266713,266645,266775,188536,193338,193658,193753,193913,235636,235640,235644,235765,239369,249065,261211,261289,261510,261597,261613,261740,261775,261790,262242,262385,262895,262950,263132,263275,263279,263393,263438,263485,263538,263624,263690,263764,263796,263885,263947,263972,263995,264335,264406,264649,264674,264791,264902,264910,264968,265064,265244,265377,265483,265487,188248,42634,41903,41897,41130,41843,40824,43516,40274,45053,44797,41392,166892,169128,169117,39217,169413,169439,169465,169236,169496,169503,40344,169633,169659,169742,169744,172123,181059,187745,31629,31612,31390,31365,30375,29964,29955,29830,29712,29333,19857,19723,19575,19529,19528,19337,18918,18168,29524, 29756, 29931, 31723, 31741, 31916, 32113, 32693,38858,41846, 44883, 45585, 46180, 51861, 51863, 52927,53489, 53729, 53787, 54103, 54163, 54184, 54248, 54679, 54706, 54757, 54764, 54791, 55016, 55082, 55084, 55097, 55106, 60175, 60198, 60369, 60406, 60421, 60430, 60767, 60777, 61383, 61529, 61607, 61737, 61931, 62107, 62178, 62246, 62280, 62308, 62434, 62697, 62876, 62973, 63015, 63116, 53729, 65237, 74110,75783, 76276, 76620, 77551, 77704, 77741, 79892, 80704, 80718, 81225, 84225, 84529, 84578, 84823, 85749, 86188, 86432, 86750, 87101, 87199,90465, 90961,97104,107776, 108461, 108687, 108798, 108908, 108959, 109002, 109035, 109942, 112250, 112488, 112973, 112981, 113567, 114128, 114484, 114486, 114574, 114810, 115019, 115124, 115361, 115843, 116183, 116231, 116555, 117639, 118052, 118114, 124958, 125830, 126187, 126525, 126663, 127039, 127242, 130058, 130314, 130489, 130822, 130850, 133987, 134197, 140791, 154756]
# farm_IDs = [166929,166600,194120,166413,194516,164740,194796,166308,117328,127217,131034,133919,139264,139815,139991,143176,154257,155191,155215,155258,156671,157264,157427,157477,157545,157735,157840,157912,159412,159573,159673,159750,159767,159897,161364,162158,162331,116293,116048,85331,85476,86065,86152,87546,87702,90346,90403,91221,94148,106452,107841,107852,107880,108731,108927,110557,114232,115077,115348,85217,18813,34494,34750,39070,45958,284330,48496,51430,53040,53641,54130,54284,54395,54646,54935,55010,60294,60353,60478,61306,65304,65369,74487,77915,78353,81177,84290,287752,85205,84340,292590,292787,293712,294269,295185,304254,110044,109051,108729,108716,107966,107491,78373,80719,84918,85340,86699,88400,88977,88988,88995,90320,90477,92403,93465,96990,99367,111668,112464,113877,60164,60490,60738,61122,61235,61785,62255,62514,63115,74726,76500,77266,40227,50108,52705,54440,55042,55107,55164,55452,55669,55749,34718,32112,29961,19198,283505,269563,269611,269852,269990,270315,270319,270582,270588,270627,270900,270939,282082,282066,282105,266896,267058,267089,267338,267492,267621,267664,267713,267889,268239,268626,269100,269458,265503,265563,265685,265704,265745,265922,266131,266237,266471,266481,266528,266576,266713,266645,266775,188536,193338,193658,193753,193913,235636,235640,235644,235765,239369,249065,261211,261289,261510,261597,261613,261740,261775,261790,262242,262385,262895,262950,263132,263275,263279,263393,263438,263485,263538,263624,263690,263764,263796,263885,263947,263972,263995,264335,264406,264649,264674,264791,264902,264910,264968,265064,265244,265377,265483,265487,188248,42634,41903,41897,41130,41843,40824,43516,40274,45053,44797,41392,166892,169128,169117,39217,169413,169439,169465,169236,169496,169503,40344,169633,169659,169742,169744,172123,181059,187745,31629,31612,31390,31365,30375,29964,29955,29830,29712,29333,19857,19723,19575,19529,19528,19337,18918,18168,29524, 29756, 29931, 31723, 31741, 31916, 32113, 32693,38858,41846, 44883, 45585, 46180, 51861, 51863, 52927,53489, 53729, 53787, 54103, 54163, 54184, 54248, 54679, 54706, 54757, 54764, 54791, 55016, 55082, 55084, 55097, 55106, 60175, 60198, 60369, 60406, 60421, 60430, 60767, 60777, 61383, 61529, 61607, 61737, 61931, 62107, 62178, 62246, 62280, 62308, 62434, 62697, 62876, 62973, 63015, 63116, 53729, 65237, 74110,75783, 76276, 76620, 77551, 77704, 77741, 79892, 80704, 80718, 81225, 84225, 84529, 84578, 84823, 85749, 86188, 86432, 86750, 87101, 87199,90465, 90961,97104,107776, 108461, 108687, 108798, 108908, 108959, 109002, 109035, 109942, 112250, 112488, 112973, 112981, 113567, 114128, 114484, 114486, 114574, 114810, 115019, 115124, 115361, 115843, 116183, 116231, 116555, 117639, 118052, 118114, 124958, 125830, 126187, 126525, 126663, 127039, 127242, 130058, 130314, 130489, 130822, 130850, 133987, 134197, 140791, 154756]
# farm_IDs = [79066,349273,295052,293910,263067,241211,239280,237859,80140,191545,33999,237649,116455,44233,227827,77215,223404,230179,60162,165628,126443,60799,196204,63081,33364,213326,213773,223061,223372,218111,229686,213083,210900,164157,164369,166063,161457,160639,99518,88448,160682,88554,92255,115758,91375,142425,131371,32825,46125,55667,60742,77692,268029,266805,264401,262350,261450,286123,281041,292498,292545,232381,232439,232732,232932,349036,295347,295347,223390,224566,230393,230642,231577,201514,210444,211886,212524,213117,213185,213373,213504,200878,166374,166344,165158,163801,159744,159696,159503,157632,213754,108511,108817,107263,115421,155122,134303,118037,126874,134388,139979,141483,221085,85955,84485,81310,84552,84800,85091,86024,91489,154828,89296,61601,61825,61111,61950,62016,62978,55423,64841,55173,65169,29913,30602,32389,32423,32875,34710,166929,166600,194120,166413,194516,164740,194796,166308,117328,127217,131034,133919,139264,139815,139991,143176,154257,155191,155215,155258,156671,157264,157427,157477,157545,157735,157840,157912,159412,159573,159673,159750,159767,159897,161364,162158,162331,116293,116048,85331,85476,86065,86152,87546,87702,90346,90403,91221,94148,106452,107841,107852,107880,108731,108927,110557,114232,115077,115348,85217,18813,34494,34750,39070,45958,284330,48496,51430,53040,53641,54130,54284,54395,54646,54935,55010,60294,60353,60478,61306,65304,65369,74487,77915,78353,81177,84290,287752,85205,84340,292590,292787,293712,294269,295185,304254,110044,109051,108729,108716,107966,107491,78373,80719,84918,85340,86699,88400,88977,88988,88995,90320,90477,92403,93465,96990,99367,111668,112464,113877,60164,60490,60738,61122,61235,61785,62255,62514,63115,74726,76500,77266,40227,50108,52705,54440,55042,55107,55164,55452,55669,55749,34718,32112,29961,19198,283505,269563,269611,269852,269990,270315,270319,270582,270588,270627,270900,270939,282082,282066,282105,266896,267058,267089,267338,267492,267621,267664,267713,267889,268239,268626,269100,269458,265503,265563,265685,265704,265745,265922,266131,266237,266471,266481,266528,266576,266713,266645,266775,188536,193338,193658,193753,193913,235636,235640,235644,235765,239369,249065,261211,261289,261510,261597,261613,261740,261775,261790,262242,262385,262895,262950,263132,263275,263279,263393,263438,263485,263538,263624,263690,263764,263796,263885,263947,263972,263995,264335,264406,264649,264674,264791,264902,264910,264968,265064,265244,265377,265483,265487,188248,42634,41903,41897,41130,41843,40824,43516,40274,45053,44797,41392,166892,169128,169117,39217,169413,169439,169465,169236,169496,169503,40344,169633,169659,169742,169744,172123,181059,187745,31629,31612,31390,31365,30375,29964,29955,29830,29712,29333,19857,19723,19575,19529,19528,19337,18918,18168,29524, 29756, 29931, 31723, 31741, 31916, 32113, 32693,38858,41846, 44883, 45585, 46180, 51861, 51863, 52927,53489, 53729, 53787, 54103, 54163, 54184, 54248, 54679, 54706, 54757, 54764, 54791, 55016, 55082, 55084, 55097, 55106, 60175, 60198, 60369, 60406, 60421, 60430, 60767, 60777, 61383, 61529, 61607, 61737, 61931, 62107, 62178, 62246, 62280, 62308, 62434, 62697, 62876, 62973, 63015, 63116, 53729, 65237, 74110,75783, 76276, 76620, 77551, 77704, 77741, 79892, 80704, 80718, 81225, 84225, 84529, 84578, 84823, 85749, 86188, 86432, 86750, 87101, 87199,90465, 90961,97104,107776, 108461, 108687, 108798, 108908, 108959, 109002, 109035, 109942, 112250, 112488, 112973, 112981, 113567, 114128, 114484, 114486, 114574, 114810, 115019, 115124, 115361, 115843, 116183, 116231, 116555, 117639, 118052, 118114, 124958, 125830, 126187, 126525, 126663, 127039, 127242, 130058, 130314, 130489, 130822, 130850, 133987, 134197, 140791, 154756]
# farm_IDs = [235496,230661,227827,223084,212815,96774,79066,349273,295052,293910,263067,241211,239280,237859,80140,191545,33999,237649,116455,44233,227827,77215,223404,230179,60162,165628,126443,60799,196204,63081,33364,213326,213773,223061,223372,218111,229686,213083,210900,164157,164369,166063,161457,160639,99518,88448,160682,88554,92255,115758,91375,142425,131371,32825,46125,55667,60742,77692,268029,266805,264401,262350,261450,286123,281041,292498,292545,232381,232439,232732,232932,349036,295347,295347,223390,224566,230393,230642,231577,201514,210444,211886,212524,213117,213185,213373,213504,200878,166374,166344,165158,163801,159744,159696,159503,157632,213754,108511,108817,107263,115421,155122,134303,118037,126874,134388,139979,141483,221085,85955,84485,81310,84552,84800,85091,86024,91489,154828,89296,61601,61825,61111,61950,62016,62978,55423,64841,55173,65169,29913,30602,32389,32423,32875,34710,166929,166600,194120,166413,194516,164740,194796,166308,117328,127217,131034,133919,139264,139815,139991,143176,154257,155191,155215,155258,156671,157264,157427,157477,157545,157735,157840,157912,159412,159573,159673,159750,159767,159897,161364,162158,162331,116293,116048,85331,85476,86065,86152,87546,87702,90346,90403,91221,94148,106452,107841,107852,107880,108731,108927,110557,114232,115077,115348,85217,18813,34494,34750,39070,45958,284330,48496,51430,53040,53641,54130,54284,54395,54646,54935,55010,60294,60353,60478,61306,65304,65369,74487,77915,78353,81177,84290,287752,85205,84340,292590,292787,293712,294269,295185,304254,110044,109051,108729,108716,107966,107491,78373,80719,84918,85340,86699,88400,88977,88988,88995,90320,90477,92403,93465,96990,99367,111668,112464,113877,60164,60490,60738,61122,61235,61785,62255,62514,63115,74726,76500,77266,40227,50108,52705,54440,55042,55107,55164,55452,55669,55749,34718,32112,29961,19198,283505,269563,269611,269852,269990,270315,270319,270582,270588,270627,270900,270939,282082,282066,282105,266896,267058,267089,267338,267492,267621,267664,267713,267889,268239,268626,269100,269458,265503,265563,265685,265704,265745,265922,266131,266237,266471,266481,266528,266576,266713,266645,266775,188536,193338,193658,193753,193913,235636,235640,235644,235765,239369,249065,261211,261289,261510,261597,261613,261740,261775,261790,262242,262385,262895,262950,263132,263275,263279,263393,263438,263485,263538,263624,263690,263764,263796,263885,263947,263972,263995,264335,264406,264649,264674,264791,264902,264910,264968,265064,265244,265377,265483,265487,188248,42634,41903,41897,41130,41843,40824,43516,40274,45053,44797,41392,166892,169128,169117,39217,169413,169439,169465,169236,169496,169503,40344,169633,169659,169742,169744,172123,181059,187745,31629,31612,31390,31365,30375,29964,29955,29830,29712,29333,19857,19723,19575,19529,19528,19337,18918,18168,29524, 29756, 29931, 31723, 31741, 31916, 32113, 32693,38858,41846, 44883, 45585, 46180, 51861, 51863, 52927,53489, 53729, 53787, 54103, 54163, 54184, 54248, 54679, 54706, 54757, 54764, 54791, 55016, 55082, 55084, 55097, 55106, 60175, 60198, 60369, 60406, 60421, 60430, 60767, 60777, 61383, 61529, 61607, 61737, 61931, 62107, 62178, 62246, 62280, 62308, 62434, 62697, 62876, 62973, 63015, 63116, 53729, 65237, 74110,75783, 76276, 76620, 77551, 77704, 77741, 79892, 80704, 80718, 81225, 84225, 84529, 84578, 84823, 85749, 86188, 86432, 86750, 87101, 87199,90465, 90961,97104,107776, 108461, 108687, 108798, 108908, 108959, 109002, 109035, 109942, 112250, 112488, 112973, 112981, 113567, 114128, 114484, 114486, 114574, 114810, 115019, 115124, 115361, 115843, 116183, 116231, 116555, 117639, 118052, 118114, 124958, 125830, 126187, 126525, 126663, 127039, 127242, 130058, 130314, 130489, 130822, 130850, 133987, 134197, 140791, 154756]


farm_IDs = list(set(farm_IDs))
riveri_IDs = list(set(riveri_IDs))

totalabels = len(farm_IDs)+len(riveri_IDs)
# not_farm_IDs = (np.where(farm_label_array == 2)[0]).tolist() # has all the IDs that are farms

lenoffarmlist = len(farm_IDs)
lenofriverlist = len(riveri_IDs)
print(lenoffarmlist)
print(lenofriverlist)
# not_farm_IDs = not_farm_IDs[:lenoffarmlist]
# print(len(not_farm_IDs))
for ID in continent_ID_list:
    if ID in riveri_IDs:
        farm_conti_list2.append(ID)
    elif ID in farm_IDs:
        farm_conti_list1.append(ID)
    else:
        not_farm_conti_list.append(ID)

print(len(farm_conti_list1))
print(len(farm_conti_list2))
print(len(not_farm_conti_list))

# print(no_conti_farm_IDs)



## start training 10 different model from here
## so each loop when shuffle pick first several non-farm ID as train sample,
## these IDs will be remove from the not_farm_conti_list
## So for the future loop we will must select totally new IDs as train sample


train_loss = []
train_balance = []

preservation  = []


while(Accuracy<0.99):
    no_epochs+=50
    bias = bias*0.9

    experiment_id = str(n)
    not_s = []
    random.shuffle(not_farm_conti_list)

    # store the final IDs into a list
    final_IDs = []
    farm_conti_list1_test = sample(farm_conti_list1,100)
    print("EXTRACTED :",len(farm_conti_list1_test))
    farm_conti_list1_train = [x for x in farm_conti_list1 if x not in farm_conti_list1_test]
    for ID in farm_conti_list1_train:
        final_IDs.append(ID)

    farm_conti_list2_test = sample(farm_conti_list2,50)
    print("EXTRACTED :",len(farm_conti_list2_test))
    farm_conti_list2_train = [x for x in farm_conti_list2 if x not in farm_conti_list2_test]
    for ID in farm_conti_list2_train:
        final_IDs.append(ID)

    ratio = totalabels/len(continent_ID_list)
    count = (150/ratio)
    not_farm_conti_list_sample = sample(not_farm_conti_list,int(count))
    not_farm_conti_list_train = [x for x in not_farm_conti_list if x not in not_farm_conti_list_sample]

    no_conti_farm_IDs = abs(len(farm_conti_list1_train)+len(farm_conti_list2_train))
    final_IDs.extend(sample(not_farm_conti_list_train,no_conti_farm_IDs))


    frac_map_images_list = []
    label_images_list = []

    for ID in final_IDs:
        frac_map_image, label_image, ID = create_frac_map_and_label(ID,farm_label_array)            
        frac_map_images_list.append(frac_map_image)
        label_images_list.append(label_image)
    print("========EXTRACT=======================")
    print(len(farm_conti_list1_train))
    print(len(farm_conti_list2_train))
    print(len(final_IDs))


    # print(len(frac_map_images_list))
    # print(frac_map_images_list[0].shape)

    ## train model
    print("TRAIN MODEL")
    print("MODEL: ",n)


    data = CLASSIFIER(frac_map_images_list, label_images_list,final_IDs)
    data_loader = torch.utils.data.DataLoader(dataset=data, batch_size=batch_size, shuffle=True, num_workers=0)
    no_epochs_monitor = 1
    for epoch in range(1,no_epochs+1):
        
        model.train()

        train_time_start = time.time()
        epoch_loss = 0
        epoch_loss_ce = 0
        epoch_loss_recon = 0
    

        for batch, [frac_map_batch, label_image_batch,ID_batch] in enumerate(data_loader):
            classification,out = model(frac_map_batch.to('cuda').float()) # gets output for a batch
            label_batch = label_image_batch.type(torch.long).to('cuda') # gets the labels for that batch
            batch_loss_ce = criterion_classification(classification, label_batch) # calculates the loss for that batch
            frac_map_batch = frac_map_batch.to('cuda').float()
            batch_loss_recon = torch.mean(torch.sum(mse_loss(input_image = out, target = frac_map_batch,ignored_index = 0,reduction = 'None')))
            if(no_epochs<(no_epochs*3/4)):
                batch_loss = batch_loss_ce
            else:
                batch_loss = bias*batch_loss_recon+batch_loss_ce
            optimizer.zero_grad()
            batch_loss.backward()
            optimizer.step()
            epoch_loss += batch_loss.item()
            epoch_loss_ce += batch_loss_ce.item()
            epoch_loss_recon += batch_loss_recon.item()

        epoch_loss = epoch_loss/(batch+1)
        epoch_loss_ce = epoch_loss_ce/(batch+1)
        epoch_loss_recon = epoch_loss_recon/(batch+1)
        epoch_balance = float(epoch_loss_ce/(epoch_loss_recon*bias))
        # print(epoch,"LOSS: ",epoch_loss,epoch_loss_recon)
        # print("\n")
    model.eval()
    torch.save(model.state_dict(), os.path.join(Model_Dir, str(experiment_id) +".pt"))

# ========================= ========================= ========================= =========================
    farm_label_array = np.load(farm_label_array_path)
    totallist1= farm_label_array.tolist()
    for i in range(1000000):
        totallist1[i] = 0
    totallist2 = totallist1.copy()

    final_IDs = continent_ID_list.copy()
    print(len(final_IDs))
    frac_map_images_list = []
    label_images_list = []
    print("begin to generate the images")
    for ID in final_IDs:
        frac_map_image, label_image, ID = create_frac_map_and_label(ID,farm_label_array)            
        frac_map_images_list.append(frac_map_image)
        label_images_list.append(label_image)

    print("start to run (image prepaired)")
    model.eval()
    data = CLASSIFIER(frac_map_images_list, label_images_list,final_IDs)
    data_loader = torch.utils.data.DataLoader(dataset=data, batch_size=1, shuffle=False, num_workers=0)
    preds = []
    labels = []
    IDs_all = []
    for batch, [frac_map_batch, label_image_batch,ID_batch] in enumerate(data_loader):
        classification,out = model(frac_map_batch.to('cuda').float()) # gets output for a batch
        label_batch = label_image_batch.type(torch.long).to('cuda') # gets the labels for that batch
        out_label_batch = torch.argmax(torch.nn.functional.softmax(classification, dim=1), dim=1)
        preds  = list(preds)
        preds.append(out_label_batch.detach().cpu().numpy())
        labels.append(label_batch.cpu().numpy())
        IDs_all.append(ID_batch)
    pred_array = np.concatenate(preds, axis=0)
    ID_array = np.concatenate(IDs_all, axis=0)

    for i,d in enumerate(ID_array):
        if pred_array[i] == 1:
            totallist1[d] += pred_array[i]  
        if pred_array[i] == 2:
            totallist2[d] +=1

    level1=[]
    counting1 = 0

    for i,d in enumerate(totallist1):
        if(d == 1):
            counting1+=1
            level1.append(i)

    l1preserve = level1.copy()

    level2=[]
    counting2 = 0

    for i,d in enumerate(totallist2):
        if(d == 1):
            counting2+=1
            level2.append(i)

    print("=========================FARM=================================")
    print ("This is total prediction")
    print("PREdict as farm: ",counting1)
    # notfarm_IDs = [131075, 188421, 40969, 284681, 174093, 264207, 258074, 2078, 151583, 182306, 174114, 235558, 210988, 174126, 139311, 348212, 106550, 10294, 53303, 116790, 200762, 280631, 133181, 172094, 151624, 135247, 274518, 53338, 315493, 266346, 190571, 43118, 209008, 10354, 317560, 174200, 180347, 133247, 174218, 274582, 114844, 313508, 315559, 102569, 92367, 174296, 190682, 131305, 162025, 84206, 237823, 317706, 258325, 307481, 125214, 231720, 78123, 186670, 188720, 33075, 203061, 241983, 55620, 241991, 309577, 88397, 149846, 219480, 205146, 141660, 174429, 211294, 180575, 156001, 172387, 203107, 315748, 285035, 33133, 141682, 317817, 135548, 174461, 227714, 10636, 170395, 2463, 41376, 264609, 102818, 127397, 170406, 233901, 10672, 311734, 174519, 184761, 201146, 170430, 268744, 276938, 188875, 270794, 334289, 190929, 92634, 10714, 254430, 170465, 178662, 10728, 172524, 176623, 172530, 133626, 180731, 199164, 141820, 172541, 41470, 59909, 313862, 207379, 172564, 10773, 51743, 135713, 92711, 109098, 180788, 186935, 285244, 285245, 137810, 277076, 170581, 252502, 285273, 76390, 311911, 238185, 313961, 105071, 29297, 172660, 273013, 29311, 174721, 285313, 203402, 334493, 277153, 172710, 146088, 98985, 287404, 172721, 203443, 234164, 101045, 209597, 29374, 144063, 144064, 277182, 189124, 283337, 51914, 172750, 312017, 287442, 156372, 115413, 109269, 201432, 160490, 187117, 113393, 277235, 238326, 45815, 39677, 314135, 207650, 47909, 103208, 90922, 277293, 172857, 256830, 314176, 45902, 174928, 174929, 203601, 162643, 138070, 203610, 43886, 174960, 138099, 349046, 33656, 31609, 213893, 170886, 187273, 201623, 187287, 109471, 193439, 207783, 275368, 312238, 201647, 244657, 349110, 33725, 207808, 181186, 203714, 256962, 64457, 33741, 170959, 64469, 291800, 181209, 9177, 277467, 201693, 160736, 93153, 228331, 277483, 287733, 316409, 261119, 291844, 201737, 136201, 183305, 1037, 173071, 33808, 187409, 107535, 107541, 175127, 121881, 203802, 121891, 287785, 1068, 207917, 187441, 164916, 261179, 201787, 169023, 287808, 203845, 187467, 187468, 349262, 173144, 314457, 283739, 105572, 171112, 257130, 193644, 74863, 99442, 187507, 74868, 173181, 171136, 171143, 138378, 281740, 220311, 189593, 74914, 242858, 314541, 117936, 314546, 271541, 29879, 33978, 169148, 169149, 1214, 130238, 220351, 169153, 206023, 169162, 234706, 175317, 27862, 312540, 181470, 169189, 38118, 140521, 187631, 79098, 161018, 253180, 187650, 283909, 169222, 230683, 314653, 273694, 169247, 275741, 275746, 199971, 314661, 349481, 177449, 255277, 173359, 150832, 113972, 187709, 136512, 50497, 175434, 64846, 175441, 189779, 144724, 273749, 271701, 175449, 210266, 230776, 187772, 171395, 294276, 183692, 251276, 191896, 232864, 347555, 118189, 118190, 1455, 179633, 181683, 273844, 1461, 116147, 271804, 271814, 144839, 181710, 273870, 275927, 138712, 134637, 347634, 179699, 214516, 267769, 181765, 294407, 50699, 128527, 347667, 208407, 316967, 271917, 103985, 255542, 171587, 267849, 239187, 32361, 292462, 188015, 192112, 224882, 235143, 1676, 161429, 161452, 274094, 116399, 116412, 265922, 173770, 204496, 317137, 173782, 233181, 241373, 263907, 188142, 202481, 257780, 151286, 40697, 284413, 9982, 311048, 30478, 139034, 216865, 116513, 157482, 139050, 44845, 171826, 317234, 73522, 173885, 233281, 313157, 274248, 249674, 141143, 173913, 106333, 233313, 114531, 206696, 188266, 32620, 255854, 87920, 202612, 202625, 1921, 161669, 317319, 206733, 53134, 317327, 231322, 313242, 51103, 202668, 188342, 311222, 292803, 317385, 204745, 171982, 2001, 272342, 118747, 79836, 51171, 102386, 192500, 249847, 241658, 47099]
    # notfarm_IDs = [316311,294874,313512,314126,308835,316593,308444,313248,310278,317778,309767,349231,311847,312846,274860,270068,271742,266276,271905,272464,274682,274684,276326,275387,277616,270985,274888,274934,249846,248837,237384,251800,250903,236811,234969,250172,233595,253399,253952,229496,261945,253120,254486,256587,284407,228309,284132,287275,254032,265592,284496,227512,211674,224221,223975,223640,213211,224895,224785,226092,226356,226832,218884,221353,221378,219937,220778,264064,138011,210990,205278,160527,205039,138532,211608,204954,208193,157000,206235,154121,209102,209299,210294,210243,151673,153017,180581,187536,170974,197515,174835,126868,114731,114832,109968,129400,101869,130673,109570,123819,122208,122810,137797,106806,137485,118789,135992,74683,75524,51083,79906,56614,76851,33437,40794,79074,33125,92946,30768,41576,81226,28739,33658,18686,9970,2427,1491,10704,10176,10608,10175,131075, 188421, 40969, 284681, 174093, 264207, 258074, 2078, 151583, 182306, 174114, 235558, 210988, 174126, 139311, 348212, 106550, 10294, 53303, 116790, 200762, 280631, 133181, 172094, 151624, 135247, 274518, 53338, 315493, 266346, 190571, 43118, 209008, 10354, 317560, 174200, 180347, 133247, 174218, 274582, 114844, 313508, 315559, 102569, 92367, 174296, 190682, 131305, 162025, 84206, 237823, 317706, 258325, 307481, 125214, 231720, 78123, 186670, 188720, 33075, 203061, 241983, 55620, 241991, 309577, 88397, 149846, 219480, 205146, 141660, 174429, 211294, 180575, 156001, 172387, 203107, 315748, 285035, 33133, 141682, 317817, 135548, 174461, 227714, 10636, 170395, 2463, 41376, 264609, 102818, 127397, 170406, 233901, 10672, 311734, 174519, 184761, 201146, 170430, 268744, 276938, 188875, 270794, 334289, 190929, 92634, 10714, 254430, 170465, 178662, 10728, 172524, 176623, 172530, 133626, 180731, 199164, 141820, 172541, 41470, 59909, 313862, 207379, 172564, 10773, 51743, 135713, 92711, 109098, 180788, 186935, 285244, 285245, 137810, 277076, 170581, 252502, 285273, 76390, 311911, 238185, 313961, 105071, 29297, 172660, 273013, 29311, 174721, 285313, 203402, 334493, 277153, 172710, 146088, 98985, 287404, 172721, 203443, 234164, 101045, 209597, 29374, 144063, 144064, 277182, 189124, 283337, 51914, 172750, 312017, 287442, 156372, 115413, 109269, 201432, 160490, 187117, 113393, 277235, 238326, 45815, 39677, 314135, 207650, 47909, 103208, 90922, 277293, 172857, 256830, 314176, 45902, 174928, 174929, 203601, 162643, 138070, 203610, 43886, 174960, 138099, 349046, 33656, 31609, 213893, 170886, 187273, 201623, 187287, 109471, 193439, 207783, 275368, 312238, 201647, 244657, 349110, 33725, 207808, 181186, 203714, 256962, 64457, 33741, 170959, 64469, 291800, 181209, 9177, 277467, 201693, 160736, 93153, 228331, 277483, 287733, 316409, 261119, 291844, 201737, 136201, 183305, 1037, 173071, 33808, 187409, 107535, 107541, 175127, 121881, 203802, 121891, 287785, 1068, 207917, 187441, 164916, 261179, 201787, 169023, 287808, 203845, 187467, 187468, 349262, 173144, 314457, 283739, 105572, 171112, 257130, 193644, 74863, 99442, 187507, 74868, 173181, 171136, 171143, 138378, 281740, 220311, 189593, 74914, 242858, 314541, 117936, 314546, 271541, 29879, 33978, 169148, 169149, 1214, 130238, 220351, 169153, 206023, 169162, 234706, 175317, 27862, 312540, 181470, 169189, 38118, 140521, 187631, 79098, 161018, 253180, 187650, 283909, 169222, 230683, 314653, 273694, 169247, 275741, 275746, 199971, 314661, 349481, 177449, 255277, 173359, 150832, 113972, 187709, 136512, 50497, 175434, 64846, 175441, 189779, 144724, 273749, 271701, 175449, 210266, 230776, 187772, 171395, 294276, 183692, 251276, 191896, 232864, 347555, 118189, 118190, 1455, 179633, 181683, 273844, 1461, 116147, 271804, 271814, 144839, 181710, 273870, 275927, 138712, 134637, 347634, 179699, 214516, 267769, 181765, 294407, 50699, 128527, 347667, 208407, 316967, 271917, 103985, 255542, 171587, 267849, 239187, 32361, 292462, 188015, 192112, 224882, 235143, 1676, 161429, 161452, 274094, 116399, 116412, 265922, 173770, 204496, 317137, 173782, 233181, 241373, 263907, 188142, 202481, 257780, 151286, 40697, 284413, 9982, 311048, 30478, 139034, 216865, 116513, 157482, 139050, 44845, 171826, 317234, 73522, 173885, 233281, 313157, 274248, 249674, 141143, 173913, 106333, 233313, 114531, 206696, 188266, 32620, 255854, 87920, 202612, 202625, 1921, 161669, 317319, 206733, 53134, 317327, 231322, 313242, 51103, 202668, 188342, 311222, 292803, 317385, 204745, 171982, 2001, 272342, 118747, 79836, 51171, 102386, 192500, 249847, 241658, 47099,313189,314113,314346,313833,314429,349352,313618,314485,315490,316593,313573,315654,294433,310787,309767,309082,308835,338479,294132,308444,312788,284496,312397,284496,296040,334449,285358,287499,287516,284370,317548,277616,284436,285770,287479,288150,277582,284108,283583,317344,276807,284024,293713,280885,274934,282127,274860,293899,274888,277221,294057,277247,277286]
    notfarm_IDs = [211942, 211792, 248996, 207309, 231956, 239158, 207619, 234535, 230755, 233616, 207672, 232717, 233580, 211769, 227388, 211213, 229698, 211516, 211421, 219070, 225013, 217673, 226844, 218586, 220972, 220933, 217700, 218528, 218437, 221236, 193764, 162468, 158391, 163748, 163863, 150020, 166540, 170821, 172188, 175456, 140039, 190066, 186376, 190827, 139872, 145248, 142885, 140215, 146377, 201030, 206292, 140183, 201912, 206755, 206855, 207036, 207108, 139195, 125670, 134550, 114601, 122891, 116393, 125283, 135613, 123988, 136424, 136748, 137646, 87661, 79821, 76452, 88180, 87661, 90983, 75476, 88180, 75406, 79821, 99265, 91257, 316311, 294874, 313512, 314126, 308835, 316593, 308444, 313248, 310278, 317778, 309767, 349231, 311847, 312846, 274860, 270068, 271742, 266276, 271905, 272464, 274682, 274684, 276326, 275387, 277616, 270985, 274888, 274934, 249846, 248837, 237384, 251800, 250903, 236811, 234969, 250172, 233595, 253399, 253952, 229496, 261945, 253120, 254486, 256587, 284407, 228309, 284132, 287275, 254032, 265592, 284496, 227512, 211674, 224221, 223975, 223640, 213211, 224895, 224785, 226092, 226356, 226832, 218884, 221353, 221378, 219937, 220778, 264064, 138011, 210990, 205278, 160527, 205039, 138532, 211608, 204954, 208193, 157000, 206235, 154121, 209102, 209299, 210294, 210243, 151673, 153017, 180581, 187536, 170974, 197515, 174835, 126868, 114731, 114832, 109968, 129400, 101869, 130673, 109570, 123819, 122208, 122810, 137797, 106806, 137485, 118789, 135992, 74683, 75524, 51083, 79906, 56614, 76851, 33437, 40794, 79074, 33125, 92946, 30768, 41576, 81226, 28739, 33658, 18686, 9970, 2427, 1491, 10704, 10176, 10608, 10175, 131075, 188421, 40969, 284681, 174093, 264207, 258074, 2078, 151583, 182306, 174114, 235558, 210988, 174126, 139311, 348212, 106550, 10294, 53303, 116790, 200762, 280631, 133181, 172094, 151624, 135247, 274518, 53338, 315493, 266346, 190571, 43118, 209008, 10354, 317560, 174200, 180347, 133247, 174218, 274582, 114844, 313508, 315559, 102569, 92367, 174296, 190682, 131305, 162025, 84206, 237823, 317706, 258325, 307481, 125214, 231720, 78123, 186670, 188720, 33075, 203061, 241983, 55620, 241991, 309577, 88397, 149846, 219480, 205146, 141660, 174429, 211294, 180575, 156001, 172387, 203107, 315748, 285035, 33133, 141682, 317817, 135548, 174461, 227714, 10636, 170395, 2463, 41376, 264609, 102818, 127397, 170406, 233901, 10672, 311734, 174519, 184761, 201146, 170430, 268744, 276938, 188875, 270794, 334289, 190929, 92634, 10714, 254430, 170465, 178662, 10728, 172524, 176623, 172530, 133626, 180731, 199164, 141820, 172541, 41470, 59909, 313862, 207379, 172564, 10773, 51743, 135713, 92711, 109098, 180788, 186935, 285244, 285245, 137810, 277076, 170581, 252502, 285273, 76390, 311911, 238185, 313961, 105071, 29297, 172660, 273013, 29311, 174721, 285313, 203402, 334493, 277153, 172710, 146088, 98985, 287404, 172721, 203443, 234164, 101045, 209597, 29374, 144063, 144064, 277182, 189124, 283337, 51914, 172750, 312017, 287442, 156372, 115413, 109269, 201432, 160490, 187117, 113393, 277235, 238326, 45815, 39677, 314135, 207650, 47909, 103208, 90922, 277293, 172857, 256830, 314176, 45902, 174928, 174929, 203601, 162643, 138070, 203610, 43886, 174960, 138099, 349046, 33656, 31609, 213893, 170886, 187273, 201623, 187287, 109471, 193439, 207783, 275368, 312238, 201647, 244657, 349110, 33725, 207808, 181186, 203714, 256962, 64457, 33741, 170959, 64469, 291800, 181209, 9177, 277467, 201693, 160736, 93153, 228331, 277483, 287733, 316409, 261119, 291844, 201737, 136201, 183305, 1037, 173071, 33808, 187409, 107535, 107541, 175127, 121881, 203802, 121891, 287785, 1068, 207917, 187441, 164916, 261179, 201787, 169023, 287808, 203845, 187467, 187468, 349262, 173144, 314457, 283739, 105572, 171112, 257130, 193644, 74863, 99442, 187507, 74868, 173181, 171136, 171143, 138378, 281740, 220311, 189593, 74914, 242858, 314541, 117936, 314546, 271541, 29879, 33978, 169148, 169149, 1214, 130238, 220351, 169153, 206023, 169162, 234706, 175317, 27862, 312540, 181470, 169189, 38118, 140521, 187631, 79098, 161018, 253180, 187650, 283909, 169222, 230683, 314653, 273694, 169247, 275741, 275746, 199971, 314661, 349481, 177449, 255277, 173359, 150832, 113972, 187709, 136512, 50497, 175434, 64846, 175441, 189779, 144724, 273749, 271701, 175449, 210266, 230776, 187772, 171395, 294276, 183692, 251276, 191896, 232864, 347555, 118189, 118190, 1455, 179633, 181683, 273844, 1461, 116147, 271804, 271814, 144839, 181710, 273870, 275927, 138712, 134637, 347634, 179699, 214516, 267769, 181765, 294407, 50699, 128527, 347667, 208407, 316967, 271917, 103985, 255542, 171587, 267849, 239187, 32361, 292462, 188015, 192112, 224882, 235143, 1676, 161429, 161452, 274094, 116399, 116412, 265922, 173770, 204496, 317137, 173782, 233181, 241373, 263907, 188142, 202481, 257780, 151286, 40697, 284413, 9982, 311048, 30478, 139034, 216865, 116513, 157482, 139050, 44845, 171826, 317234, 73522, 173885, 233281, 313157, 274248, 249674, 141143, 173913, 106333, 233313, 114531, 206696, 188266, 32620, 255854, 87920, 202612, 202625, 1921, 161669, 317319, 206733, 53134, 317327, 231322, 313242, 51103, 202668, 188342, 311222, 292803, 317385, 204745, 171982, 2001, 272342, 118747, 79836, 51171, 102386, 192500, 249847, 241658, 47099, 313189, 314113, 314346, 313833, 314429, 349352, 313618, 314485, 315490, 316593, 313573, 315654, 294433, 310787, 309767, 309082, 308835, 338479, 294132, 308444, 312788, 284496, 312397, 284496, 296040, 334449, 285358, 287499, 287516, 284370, 317548, 277616, 284436, 285770, 287479, 288150, 277582, 284108, 283583, 317344, 276807, 284024, 293713, 280885, 274934, 282127, 274860, 293899, 274888, 277221, 294057, 277247, 277286, 1266, 1343, 9858, 9889, 9981, 234179, 51653, 235422, 31448, 33435, 76858, 75505, 84693, 80772, 84683, 136577, 218474, 116476, 136487, 140589, 114456, 151328, 118107, 130620, 150116, 133612, 92821, 108865, 160266, 162066, 107308, 165603, 160332, 156562, 90538, 217969, 155652, 181558, 91334, 200204, 190098, 92101, 206327, 92469, 200760, 174857, 207296, 207647, 210301, 211380, 224745, 225232, 224943, 218513, 226231, 218764, 219446, 228405, 263609, 264319, 253792, 254329, 257007, 252720, 254413, 255352, 268930, 269032, 270881, 272820, 273266, 276596, 276553, 284011, 273139, 283570, 271696, 283676, 280707, 286133, 285842, 280646, 285560, 276877, 293839, 285127, 310373, 310275, 311802, 311187, 315435]

    wrong = [x for x in level1 if x in notfarm_IDs]
    print("Accuracy for wrong is :",((len(level1)-len(wrong))/len(level1)))

    print("After Wrong farm")
    level1 = [x for x in level1 if x not in notfarm_IDs]
    level1 = [x for x in level1 if x not in farm_conti_list1_train]
    overlapfarm = [x for x in level1 if x in farm_conti_list1_test]
    notoverlapfarm = [x for x in level1 if x not in overlapfarm]
    if(len(notoverlapfarm)==0):
        print("THIS IS OVERFIT FOR FARM")
        exit()
    print("New predictions(for this round): ")
    print(notoverlapfarm)
    print("================================")
    print("New predictions(for this addin): ")
    cantdifine = [110766, 113733, 158339, 156895, 156119, 138083, 137716, 161614, 138143, 177025, 127325, 233237, 114833, 219497, 220524, 110484, 81382, 78682, 74722, 53601, 55799, 88398, 42191, 111840, 113134, 41157, 283332, 282127, 250085, 237530, 265270, 237730, 294099, 241827, 294132, 205533, 203729, 204960, 201031, 207690, 202107, 221121, 158617, 164221, 230525, 139605, 142040, 203728, 202940, 194754, 291664, 292538, 194285, 110446, 78900, 107850, 76352, 59451, 92779, 51599, 75100, 75507, 75471, 38362, 42073, 45678, 84014, 134600, 135553, 207917, 207783, 207808, 75192, 40794, 40969, 40702, 43246, 29537, 112983, 102725, 94037, 93351, 349395, 280858, 293708, 210146, 209155, 209987, 209996, 208104, 206626, 75394, 105734, 33905, 116593, 33659, 192533, 38062, 200633, 206392, 214125, 230055, 33659, 33905, 112508, 143035, 161110, 113118, 157535, 157550, 201676, 214405, 221181, 230223, 232166, 264609, 259333, 137365, 94710, 92711, 92119, 33659, 65294, 116936, 113801, 138790, 117241, 200265, 199544, 199414, 164460, 166329, 161429, 116508, 129686, 135921, 141483, 141490, 141770, 142217, 150121, 157535, 157550, 116094, 90505, 96982, 99136, 292772, 92959, 96615, 110557, 116048, 91221, 90413, 84463, 88517, 33808, 194625, 194617, 193765, 191053, 188040, 187109, 186803, 675036, 685465, 693703, 694365, 694667, 721984, 31445, 30094, 19054, 294610, 293716, 283563, 282272, 277527, 257707, 235017, 234832, 230203, 221518, 20062, 75008, 135971, 105732, 88707, 134827, 90972, 92343, 90994, 140623, 140495, 294610, 293716, 135086, 52213, 54747, 229546, 85900, 86811, 75594, 125403, 125426, 90111, 141543, 222951, 159278, 156437, 155387, 158408]
    farmsforadding = [18168, 18692, 18813, 18918, 18924, 19083, 19184, 19198, 19337, 19528, 19529, 19575, 19702, 19723, 19800, 19846, 19857, 28845, 29264, 29333, 29524, 29712, 29717, 29756, 29830, 29864, 29913, 29931, 29955, 29961, 29964, 30083, 30170, 30180, 30307, 30375, 30602, 31365, 31390, 31612, 31629, 31695, 31723, 31741, 31892, 31916, 32112, 32113, 32389, 32423, 32615, 32669, 32684, 32693, 32753, 32802, 32816, 32825, 32834, 32875, 33081, 33106, 33364, 33375, 33418, 33803, 33999, 34108, 34220, 34283, 34494, 34614, 34644, 34668, 34710, 34718, 34750, 37766, 38858, 39070, 39217, 39978, 39979, 40067, 40163, 40164, 40227, 40274, 40335, 40344, 40416, 40618, 40630, 40824, 41005, 41078, 41130, 41226, 41230, 41258, 41324, 41355, 41392, 41656, 41681, 41843, 41846, 41897, 41903, 41970, 42169, 42547, 42562, 42634, 43516, 43648, 43704, 43736, 43757, 43768, 44233, 44274, 44493, 44498, 44726, 44797, 44883, 44980, 45024, 45053, 45292, 45585, 45602, 45832, 45886, 45899, 45934, 45958, 46125, 46180, 47408, 47416, 47499, 48496, 50003, 50018, 50087, 50108, 50160, 50222, 50766, 50904, 50907, 51073, 51169, 51361, 51430, 51861, 51863, 51999, 52117, 52163, 52206, 52351, 52388, 52408, 52506, 52705, 52826, 52842, 52927, 53016, 53040, 53276, 53330, 53335, 53363, 53425, 53467, 53489, 53507, 53541, 53603, 53641, 53729, 53781, 53787, 53816, 53831, 53913, 53976, 53993, 54062, 54103, 54109, 54130, 54155, 54163, 54184, 54190, 54218, 54248, 54284, 54314, 54322, 54395, 54404, 54440, 54639, 54646, 54666, 54676, 54679, 54706, 54710, 54757, 54764, 54783, 54791, 54798, 54922, 54930, 54935, 55010, 55016, 55042, 55076, 55081, 55082, 55083, 55084, 55097, 55106, 55107, 55164, 55166, 55173, 55216, 55217, 55221, 55271, 55311, 55315, 55332, 55334, 55351, 55387, 55417, 55423, 55452, 55493, 55520, 55666, 55667, 55669, 55749, 55850, 55882, 56139, 56510, 57073, 59439, 59443, 60162, 60164, 60175, 60198, 60248, 60265, 60279, 60294, 60296, 60297, 60310, 60329, 60353, 60369, 60387, 60389, 60406, 60421, 60430, 60478, 60490, 60525, 60564, 60678, 60738, 60742, 60757, 60767, 60777, 60799, 60915, 61048, 61111, 61122, 61235, 61294, 61306, 61383, 61387, 61404, 61437, 61440, 61448, 61450, 61494, 61510, 61525, 61529, 61593, 61601, 61605, 61607, 61653, 61708, 61737, 61785, 61825, 61846, 61913, 61917, 61931, 61950, 61986, 62016, 62102, 62107, 62178, 62193, 62199, 62206, 62246, 62255, 62280, 62308, 62337, 62341, 62370, 62434, 62450, 62460, 62514, 62532, 62572, 62611, 62631, 62697, 62712, 62799, 62826, 62847, 62876, 62883, 62900, 62912, 62930, 62934, 62947, 62969, 62973, 62978, 63000, 63015, 63081, 63088, 63100, 63115, 63116, 63237, 64564, 64746, 64751, 64752, 64816, 64818, 64841, 64863, 64965, 65002, 65169, 65217, 65237, 65250, 65304, 65369, 65641, 65807, 65808, 65896, 65923, 65947, 66288, 74110, 74231, 74487, 74716, 74726, 74759, 74806, 74818, 75047, 75257, 75317, 75408, 75783, 75869, 76276, 76310, 76500, 76620, 76957, 76989, 77096, 77215, 77236, 77266, 77310, 77311, 77551, 77572, 77692, 77704, 77741, 77915, 78079, 78353, 78373, 78698, 78957, 79028, 79066, 79131, 79159, 79823, 79892, 79895, 79978, 80075, 80086, 80140, 80372, 80538, 80704, 80718, 80719, 80747, 80798, 81020, 81177, 81225, 81310, 81382, 84045, 84058, 84066, 84225, 84290, 84340, 84485, 84529, 84552, 84578, 84645, 84800, 84803, 84823, 84842, 84853, 84856, 84861, 84909, 84918, 84954, 84968, 85091, 85119, 85205, 85217, 85331, 85340, 85355, 85476, 85545, 85563, 85581, 85749, 85767, 85951, 85955, 86019, 86024, 86065, 86152, 86188, 86195, 86279, 86334, 86409, 86432, 86445, 86699, 86750, 86751, 86794, 86853, 87101, 87133, 87199, 87237, 87388, 87437, 87546, 87615, 87679, 87702, 88276, 88386, 88400, 88448, 88554, 88664, 88668, 88757, 88762, 88772, 88875, 88884, 88929, 88977, 88988, 88995, 89097, 89183, 89194, 89212, 89239, 89296, 89413, 89459, 89545, 89738, 89743, 89946, 89968, 89972, 90035, 90049, 90079, 90081, 90113, 90258, 90320, 90346, 90403, 90447, 90465, 90477, 90752, 90937, 90961, 91221, 91253, 91278, 91314, 91375, 91403, 91489, 91553, 91598, 91611, 91653, 91736, 91740, 91776, 91882, 92040, 92099, 92240, 92255, 92281, 92403, 92589, 92590, 93006, 93441, 93465, 93554, 93831, 94027, 94143, 94148, 94197, 94600, 94676, 94678, 94764, 96774, 96990, 96993, 97104, 99152, 99347, 99367, 99518, 100073, 102502, 102631, 105686, 105842, 106452, 106910, 107263, 107336, 107491, 107570, 107703, 107738, 107776, 107826, 107841, 107852, 107880, 107966, 107973, 108028, 108197, 108425, 108461, 108511, 108603, 108687, 108716, 108729, 108731, 108750, 108753, 108798, 108817, 108893, 108908, 108927, 108959, 109002, 109010, 109020, 109035, 109051, 109142, 109166, 109176, 109273, 109942, 109987, 110044, 110163, 110174, 110214, 110320, 110355, 110389, 110481, 110551, 110557, 110626, 110788, 111432, 111668, 112250, 112464, 112488, 112706, 112710, 112973, 112981, 113567, 113877, 114128, 114232, 114484, 114486, 114574, 114685, 114810, 115019, 115077, 115124, 115340, 115348, 115361, 115417, 115421, 115758, 115843, 116048, 116183, 116231, 116293, 116441, 116455, 116555, 116708, 116763, 116865, 116904, 117328, 117580, 117639, 118037, 118052, 118057, 118114, 118895, 121908, 124341, 124434, 124589, 124666, 124824, 124958, 125024, 125377, 125563, 125652, 125675, 125678, 125691, 125706, 125714, 125723, 125781, 125830, 125839, 125877, 125881, 125890, 125891, 125901, 125933, 125959, 125961, 125998, 126057, 126099, 126155, 126187, 126222, 126223, 126230, 126252, 126284, 126288, 126355, 126382, 126383, 126412, 126443, 126525, 126546, 126642, 126660, 126663, 126677, 126745, 126825, 126873, 126874, 126902, 126960, 127039, 127113, 127172, 127187, 127199, 127202, 127212, 127217, 127242, 127350, 127431, 128775, 128796, 129346, 129347, 129505, 129593, 129673, 129689, 129964, 130058, 130076, 130132, 130314, 130489, 130548, 130822, 130850, 130852, 131034, 131131, 131273, 131297, 131371, 131546, 133796, 133919, 133977, 133986, 133987, 134029, 134054, 134110, 134197, 134213, 134303, 134320, 134323, 134373, 134388, 134438, 137359, 137438, 138261, 138524, 138964, 139264, 139301, 139675, 139815, 139979, 139991, 140437, 140791, 141286, 141483, 141690, 142425, 142691, 143176, 144040, 151331, 151345, 151378, 153778, 154257, 154325, 154443, 154483, 154496, 154539, 154581, 154605, 154632, 154638, 154694, 154752, 154756, 154763, 154772, 154809, 154818, 154828, 154863, 154991, 155022, 155030, 155036, 155071, 155109, 155122, 155191, 155215, 155258, 155299, 155353, 155403, 155424, 155503, 155520, 155580, 155766, 155918, 156003, 156123, 156445, 156498, 156581, 156597, 156671, 157007, 157235, 157259, 157264, 157307, 157362, 157427, 157477, 157516, 157536, 157545, 157604, 157632, 157735, 157775, 157793, 157840, 157844, 157879, 157912, 158021, 158041, 158094, 158101, 158515, 158580, 158590, 158598, 158764, 158862, 158877, 159020, 159067, 159075, 159412, 159503, 159564, 159573, 159613, 159652, 159673, 159696, 159744, 159750, 159762, 159767, 159897, 160148, 160634, 160639, 160682, 160704, 160778, 160789, 161364, 161374, 161457, 162158, 162190, 162331, 163801, 163893, 164157, 164272, 164279, 164369, 164570, 164695, 164712, 164740, 164790, 165018, 165120, 165158, 165483, 165520, 165628, 165700, 165863, 165899, 165955, 166030, 166055, 166063, 166144, 166149, 166212, 166268, 166273, 166308, 166344, 166374, 166413, 166472, 166600, 166733, 166849, 166892, 166929, 167056, 169117, 169128, 169236, 169413, 169439, 169465, 169496, 169503, 169633, 169642, 169659, 169697, 169742, 169744, 169819, 169856, 170630, 170989, 171181, 172123, 181059, 187745, 188248, 188536, 191271, 191545, 192654, 192968, 193242, 193338, 193658, 193753, 193768, 193913, 194120, 194201, 194273, 194516, 194693, 194796, 195000, 195451, 196204, 197072, 197094, 197122, 200878, 200975, 201514, 209049, 209976, 210444, 210900, 211886, 212295, 212492, 212524, 212537, 212544, 212556, 212628, 212755, 212768, 212778, 212815, 213083, 213117, 213138, 213185, 213191, 213198, 213243, 213286, 213308, 213326, 213339, 213373, 213421, 213422, 213504, 213513, 213539, 213588, 213730, 213732, 213754, 213773, 213928, 214197, 214200, 218111, 218130, 218147, 218269, 218702, 218752, 219366, 221085, 222675, 222707, 223043, 223061, 223084, 223372, 223390, 223399, 223404, 223525, 224566, 224585, 227827, 229590, 229640, 229655, 229686, 229690, 229729, 229844, 229920, 229959, 230108, 230158, 230179, 230340, 230393, 230642, 230661, 231217, 231337, 231379, 231455, 231577, 231653, 232381, 232411, 232439, 232507, 232732, 232900, 232932, 232943, 233077, 233332, 235179, 235250, 235268, 235407, 235430, 235496, 235636, 235640, 235644, 235765, 235801, 237439, 237649, 237859, 238016, 238557, 238853, 238953, 239280, 239369, 241211, 242176, 246422, 249065, 249067, 249071, 250562, 250908, 251267, 261211, 261289, 261326, 261450, 261468, 261510, 261528, 261536, 261597, 261613, 261648, 261740, 261775, 261790, 261878, 261931, 261938, 261995, 262057, 262110, 262242, 262350, 262381, 262385, 262412, 262505, 262684, 262695, 262736, 262756, 262777, 262840, 262895, 262950, 262964, 263024, 263036, 263042, 263067, 263123, 263132, 263275, 263279, 263307, 263318, 263327, 263343, 263364, 263393, 263407, 263409, 263438, 263485, 263538, 263556, 263620, 263624, 263687, 263690, 263731, 263756, 263764, 263765, 263796, 263834, 263885, 263930, 263947, 263972, 263995, 264077, 264221, 264228, 264233, 264261, 264292, 264306, 264335, 264353, 264392, 264401, 264406, 264613, 264649, 264674, 264698, 264768, 264783, 264784, 264791, 264902, 264910, 264911, 264968, 264993, 265000, 265035, 265064, 265081, 265099, 265155, 265183, 265244, 265377, 265413, 265483, 265487, 265491, 265503, 265544, 265547, 265563, 265582, 265620, 265685, 265693, 265698, 265701, 265704, 265719, 265723, 265745, 265838, 265870, 265908, 265922, 266131, 266135, 266204, 266211, 266237, 266251, 266281, 266471, 266481, 266528, 266576, 266645, 266713, 266746, 266766, 266775, 266805, 266896, 267046, 267058, 267072, 267089, 267129, 267242, 267301, 267338, 267492, 267557, 267595, 267621, 267635, 267664, 267695, 267704, 267713, 267889, 267912, 267918, 267942, 267958, 268029, 268133, 268152, 268239, 268261, 268265, 268428, 268447, 268497, 268545, 268547, 268564, 268626, 268676, 268755, 268797, 268874, 268946, 269053, 269097, 269100, 269142, 269150, 269168, 269250, 269278, 269418, 269458, 269503, 269518, 269544, 269563, 269611, 269716, 269828, 269852, 269929, 269990, 270315, 270319, 270406, 270490, 270582, 270588, 270603, 270627, 270632, 270753, 270891, 270900, 270904, 270939, 270944, 270992, 271070, 271119, 274071, 277498, 280836, 281041, 281193, 281661, 282009, 282066, 282082, 282105, 283505, 284156, 284330, 285537, 285658, 285812, 285822, 285841, 285959, 286021, 286123, 286155, 286157, 286164, 287752, 292498, 292504, 292545, 292590, 292787, 293148, 293712, 293871, 293910, 294213, 294269, 295052, 295185, 295347, 304254, 347391, 349036, 349273]
    foradding = [x for x in level1 if x not in farmsforadding]
    foradding = [x for x in level1 if x not in cantdifine]
    foradding = [x for x in level1 if x not in notfarm_IDs]
    print(len(foradding))
    print(foradding)
    print("================================")

    notcover = [x for x in farm_conti_list1_test if x not in overlapfarm]
    print("Not covered ones for test: ")
    print(notcover)
    print("Accuracy for FARM: ",len(overlapfarm)/len(farm_conti_list1_test))
    print("==========================RIVER==================================")
    print ("This is total prediction")
    print("PREdict as river: ",counting2)
    level2 = [x for x in level2 if x not in farm_conti_list2_train]
    overlapriver = [x for x in level2 if x in farm_conti_list2_test]
    notoverlapriver = [x for x in level2 if x not in overlapriver]
    if(len(notoverlapriver)==0):
        print("THIS IS OVERFIT FOR RIVER")
        exit()
    print("New predictions: ")
    print(notoverlapriver)
    notcover = [x for x in farm_conti_list2_test if x not in overlapriver]
    print("Not covered ones for test: ")
    print(notcover)
    print("Accuracy for RIVER: ",len(overlapriver)/len(farm_conti_list2_test))
    # # farm_IDs = [534608, 537912, 574403, 601125, 601319, 602094, 608423, 608549, 611798, 613277, 613785, 614864, 616088, 616443, 616923, 616953, 617923, 619367, 619690, 619757, 619856, 620044, 620065, 620192, 620200, 620402, 622482, 622484, 622514, 624070, 624991, 625246, 633953, 635928, 635951, 637361, 637445, 640120, 648481, 648575, 648578, 648798, 652382, 652386, 652583, 655922, 672102, 672241, 673940, 673966, 674749, 675676, 676148, 676199, 676237, 679056, 679065, 680338, 680826, 681055, 681148, 681282, 681427, 681443, 681453, 681523, 681524, 681535, 681585, 681652, 681656, 681723, 681749, 681765, 681790, 681844, 681993, 682019, 682028, 682029, 682105, 682156, 682296, 682303, 682362, 682368, 682370, 682371, 682451, 682458, 682462, 682472, 682510, 682512, 682545, 682584, 682677, 682785, 682803, 682842, 682868, 682946, 682979, 682984, 682986, 683008, 683064, 683068, 683116, 683136, 683155, 683182, 683208, 683311, 683338, 683361, 683492, 683606, 683728, 683741, 683756, 683774, 683783, 683799, 683813, 683842, 683846, 683850, 683881, 683891, 683893, 683922, 684004, 684023, 684032, 684116, 684199, 684227, 684230, 684240, 684258, 684279, 684339, 684425, 684547, 684571, 684572, 684658, 684688, 684756, 684837, 684908, 684951, 685002, 685028, 685075, 685090, 685103, 685236, 685270, 685281, 685415, 685421, 685436, 685445, 685446, 685495, 685512, 685545, 685553, 685607, 685679, 685810, 685915, 685943, 686012, 686068, 686159, 686166, 686232, 686326, 686327, 686351, 686356, 686400, 686468, 686473, 686479, 686539, 686735, 686828, 686937, 686938, 687214, 687261, 687285, 687293, 687294, 687308, 687312, 687343, 687369, 687450, 687468, 687501, 687528, 687666, 687673, 687686, 687745, 687757, 687778, 687878, 688000, 688027, 688105, 688163, 688170, 688212, 688272, 688321, 688345, 688373, 688403, 688433, 688435, 688457, 688635, 688654, 688695, 688702, 688805, 688862, 689009, 689012, 689107, 689125, 689170, 689197, 689210, 689234, 689306, 689334, 689375, 689417, 689450, 689478, 689490, 689523, 689580, 689596, 689616, 689653, 689691, 689726, 689729, 689753, 689816, 689907, 690007, 690022, 690113, 690202, 690423, 690509, 690720, 690790, 690833, 690835, 690883, 690951, 691076, 691527, 691915, 692292, 692610, 692723, 692807, 692849, 692910, 693103, 693142, 693355, 693704, 694375, 694456, 695661, 695664, 696428, 698646, 698714, 699391, 699605, 700400, 700727, 701035, 701388, 703598, 703627, 703639, 703809, 704049, 707902, 709727, 710598, 717141, 717990, 718063, 718134, 718177, 718233, 718263, 718318, 718333, 718343, 718393, 718440, 718473, 718493, 718525, 718545, 718559, 720105, 721258, 721352, 721354, 721372, 721477, 721549, 721624, 721925, 721934, 721980, 722019, 722381, 722466, 722595, 722730, 722732, 722785, 722795, 722813, 722833, 722845, 722851, 722860, 722886, 722942, 723012, 723042, 724899, 725591, 726038, 729091, 729141, 729147, 729152, 729176, 729210, 729234, 729250, 729371, 730039, 730040, 730049, 730126, 730170, 730180, 730184, 730185, 730189, 730203, 730211, 730212, 730230, 730257, 730304, 730340, 730341, 730342, 730428, 730454, 730478, 730482, 730501, 730504, 730508, 730525, 730535, 730539, 730545, 730576, 730588, 730610, 730612, 730643, 730702, 730721, 730763, 730764, 730770, 730785, 730799, 730832, 730920, 730997, 730999, 731003, 731024, 731025, 731052, 731059, 731137, 731153, 731179, 731288, 731328, 731338, 731372, 731390, 731397, 731410, 731431, 731432, 731449, 731455, 731465, 731481, 731482, 731498, 731516, 731523, 731525, 731542, 731571, 731615, 731630, 731631, 731639, 731662, 731691, 731723, 731761, 731781, 731783, 731804, 731813, 731824, 731973, 731974, 731994, 732002, 732054, 732094, 732127, 732169, 732183, 732185, 732186, 732190, 732199, 732213, 732228, 732313, 732351, 732372, 732494, 732657, 732680, 732792, 733017, 733084, 733224, 733247, 733624, 734163, 734167, 734534, 736109, 736123, 737012, 737132, 737153, 737193, 737198, 737493, 737658, 737706, 737904, 738565, 738903, 739299, 739321, 739586,732258, 688198, 686977, 685687]
    # farm_IDs = [50160,52117,60564,62900,74716,75317,76989,79823,86019,128796,138964,155030,194273,209049,218752,223043,229640,268874,277498,264911,229920,229844,222675,213422,213198,209976,157516,141286,118895,116441,66288,54783,54109,53781,53016,52842,41324,235496,230661,227827,223084,212815,96774,79066,349273,295052,293910,263067,241211,239280,237859,80140,191545,33999,237649,116455,44233,227827,77215,223404,230179,60162,165628,126443,60799,196204,63081,33364,213326,213773,223061,223372,218111,229686,213083,210900,164157,164369,166063,161457,160639,99518,88448,160682,88554,92255,115758,91375,142425,131371,32825,46125,55667,60742,77692,268029,266805,264401,262350,261450,286123,281041,292498,292545,232381,232439,232732,232932,349036,295347,295347,223390,224566,230393,230642,231577,201514,210444,211886,212524,213117,213185,213373,213504,200878,166374,166344,165158,163801,159744,159696,159503,157632,213754,108511,108817,107263,115421,155122,134303,118037,126874,134388,139979,141483,221085,85955,84485,81310,84552,84800,85091,86024,91489,154828,89296,61601,61825,61111,61950,62016,62978,55423,64841,55173,65169,29913,30602,32389,32423,32875,34710,166929,166600,194120,166413,194516,164740,194796,166308,117328,127217,131034,133919,139264,139815,139991,143176,154257,155191,155215,155258,156671,157264,157427,157477,157545,157735,157840,157912,159412,159573,159673,159750,159767,159897,161364,162158,162331,116293,116048,85331,85476,86065,86152,87546,87702,90346,90403,91221,94148,106452,107841,107852,107880,108731,108927,110557,114232,115077,115348,85217,18813,34494,34750,39070,45958,284330,48496,51430,53040,53641,54130,54284,54395,54646,54935,55010,60294,60353,60478,61306,65304,65369,74487,77915,78353,81177,84290,287752,85205,84340,292590,292787,293712,294269,295185,304254,110044,109051,108729,108716,107966,107491,78373,80719,84918,85340,86699,88400,88977,88988,88995,90320,90477,92403,93465,96990,99367,111668,112464,113877,60164,60490,60738,61122,61235,61785,62255,62514,63115,74726,76500,77266,40227,50108,52705,54440,55042,55107,55164,55452,55669,55749,34718,32112,29961,19198,283505,269563,269611,269852,269990,270315,270319,270582,270588,270627,270900,270939,282082,282066,282105,266896,267058,267089,267338,267492,267621,267664,267713,267889,268239,268626,269100,269458,265503,265563,265685,265704,265745,265922,266131,266237,266471,266481,266528,266576,266713,266645,266775,188536,193338,193658,193753,193913,235636,235640,235644,235765,239369,249065,261211,261289,261510,261597,261613,261740,261775,261790,262242,262385,262895,262950,263132,263275,263279,263393,263438,263485,263538,263624,263690,263764,263796,263885,263947,263972,263995,264335,264406,264649,264674,264791,264902,264910,264968,265064,265244,265377,265483,265487,188248,42634,41903,41897,41130,41843,40824,43516,40274,45053,44797,41392,166892,169128,169117,39217,169413,169439,169465,169236,169496,169503,40344,169633,169659,169742,169744,172123,181059,187745,31629,31612,31390,31365,30375,29964,29955,29830,29712,29333,19857,19723,19575,19529,19528,19337,18918,18168,29524, 29756, 29931, 31723, 31741, 31916, 32113, 32693,38858,41846, 44883, 45585, 46180, 51861, 51863, 52927,53489, 53729, 53787, 54103, 54163, 54184, 54248, 54679, 54706, 54757, 54764, 54791, 55016, 55082, 55084, 55097, 55106, 60175, 60198, 60369, 60406, 60421, 60430, 60767, 60777, 61383, 61529, 61607, 61737, 61931, 62107, 62178, 62246, 62280, 62308, 62434, 62697, 62876, 62973, 63015, 63116, 53729, 65237, 74110,75783, 76276, 76620, 77551, 77704, 77741, 79892, 80704, 80718, 81225, 84225, 84529, 84578, 84823, 85749, 86188, 86432, 86750, 87101, 87199,90465, 90961,97104,107776, 108461, 108687, 108798, 108908, 108959, 109002, 109035, 109942, 112250, 112488, 112973, 112981, 113567, 114128, 114484, 114486, 114574, 114810, 115019, 115124, 115361, 115843, 116183, 116231, 116555, 117639, 118052, 118114, 124958, 125830, 126187, 126525, 126663, 127039, 127242, 130058, 130314, 130489, 130822, 130850, 133987, 134197, 140791, 154756]

    # # notfarm_IDs = [449572, 458169, 463252, 468361, 526992, 545172, 545590, 546279, 549344, 550581, 556247, 574367, 601631, 602427, 602852, 605016, 605183, 607476, 609211, 609700, 614516, 615277, 616247, 616327, 616770, 616962, 617092, 617101, 619586, 619670, 623358, 627856, 631314, 633688, 633952, 636037, 637490, 638261, 638897, 639791, 639998, 648399, 648752, 649427, 651358, 652207, 667958, 668455, 669729, 671199, 673158, 673237, 673390, 674172, 674233, 674811, 674944, 675138, 675141, 675643, 675686, 676079, 676104, 676208, 676373, 678214, 678538, 681132, 682030, 682469, 683048, 683274, 683693, 684369, 684685, 684792, 685038, 686084, 686321, 686689, 686766, 687342, 687846, 687969, 687981, 688497, 690980, 691781, 691978, 693811, 694552, 696174, 698870, 699340, 699435, 702738, 702783, 702785, 702929, 702932, 703042, 703065, 704853, 705480, 706624, 708822, 709518, 709707, 710824, 713562, 717667, 717986, 720169, 720970, 720987, 722223, 723176, 725150, 725406, 725813, 729242, 729512, 729569, 729945, 731262, 732603, 733397, 733795, 737229, 738206, 739068, 740032, 741099,693319,692188,690107,409869, 410184, 412278, 414611, 416051, 419831, 420049, 449186, 449581, 451964, 452292, 452475, 454505, 456267, 456380, 456942, 457312, 457439, 459119, 460719, 461070, 461094, 462163, 462357, 463648, 463811, 464531, 465128, 465190, 465545, 465618, 465708, 466643, 467431, 468445, 518635, 518762, 519046, 522165, 522658, 523514, 526704, 526968, 529051, 530869, 533449, 534004, 534698, 534794, 535101, 535431, 536913, 536924, 537311, 537414, 539938, 542041, 542114, 546286, 547689, 548492, 548667, 549638, 549790, 550352, 551790, 553569, 553718, 553927, 553964, 554019, 554086, 554452, 555061, 555471, 557087, 557123, 557263, 557662, 558248, 558919, 559007, 559252, 560828, 561129, 561944, 562058, 562535, 562878, 563023, 563050, 563051, 563067, 563131, 563501, 563554, 563555, 563862, 564816, 574180, 574447, 601080, 601303, 602314, 602405, 602469, 602694, 602773, 602953, 603167, 603480, 603944, 605197, 605575, 605592, 605723, 605985, 606273, 606438, 608637, 608677, 608988, 609658, 610136, 610405, 611051, 611993, 612180, 612254, 612305, 612543, 613360, 613525, 613746, 614123, 614725, 615050, 615055, 616005, 616149, 616235, 616322, 617017, 617143, 618041, 619142, 619274, 620538, 621567, 623034, 623972, 624504, 624895, 625020, 626882, 627146, 627410, 628351, 628591, 628638, 630451, 631140, 631711, 631846, 632268, 632842, 632991, 633180, 634231, 634257, 635446, 635578, 635857, 635976, 635989, 636291, 636345, 636357, 636365, 636385, 636489, 636529, 636560, 636800, 636841, 637197, 637397, 637447, 637549, 637679, 637784, 637813, 637904, 638021, 638120, 638796, 638935, 639081, 639288, 639455, 639488, 639679, 639847, 640208, 640882, 641000, 641082, 641095, 641158, 641225, 641353, 641602, 648880, 649253, 649573, 649970, 650242, 650470, 650539, 650598, 650870, 651326, 651478, 651646, 651856, 652139, 652347, 652423, 652492, 652607, 653117, 653883, 653948, 654077, 655109, 655242, 655267, 667516, 667836, 667869, 667957, 668242, 668248, 668641, 668808, 668881, 668904, 669030, 669151, 669359, 669396, 669415, 669422, 669654, 669702, 669705, 669730, 669934, 670136, 670316, 670492, 670765, 670832, 670995, 671324, 671536, 671721, 671805, 671901, 671937, 672143, 672752, 672874, 672966, 673178, 673346, 673381, 673383, 673912, 673976, 674000, 674109, 674116, 674501, 674672, 674809, 675039, 675093, 675438, 675864, 676097, 676397, 677907, 678060, 678074, 678449, 678517, 678585, 679522, 679873, 680314, 680483, 680609, 680684, 680708, 681123, 681489, 682341, 682620, 683752, 684322, 684410, 684453, 684896, 685293, 685440, 685698, 685807, 686291, 686639, 686953, 686963, 687292, 687972, 688019, 688189, 688466, 688512, 688531, 688942, 689425, 689460, 689522, 690085, 690417, 690614, 690722, 691044, 691796, 691955, 692087, 692274, 692331, 692346, 692362, 692566, 692756, 693094, 693319, 693678, 694071, 694250, 694281, 694608, 694870, 695299, 695386, 695543, 695801, 695983, 696180, 696670, 696744, 696840, 698929, 698974, 699190, 699238, 699290, 699867, 699930, 700189, 700359, 700459, 700501, 700812, 700940, 701445, 701481, 701642, 702086, 702182, 702191, 702358, 702405, 702607, 702700, 702758, 702768, 702971, 702997, 703021, 703143, 703146, 703202, 703207, 703214, 703263, 703377, 703384, 703438, 703478, 703563, 703611, 703612, 703827, 704067, 704115, 704187, 704549, 704598, 704635, 704704, 704879, 705025, 705305, 707368, 707717, 708014, 708071, 708099, 708228, 708361, 708362, 708469, 708526, 708746, 708867, 709076, 709138, 709150, 709421, 709498, 709509, 709595, 709619, 709864, 709929, 710091, 710123, 710188, 710301, 710316, 710333, 710463, 710498, 710501, 710544, 710550, 710648, 710691, 710930, 710974, 710983, 711010, 711031, 711051, 711653, 712882, 712884, 712944, 712951, 713043, 713156, 713175, 713185, 713205, 713313, 713414, 713438, 713467, 713519, 713610, 713735, 713739, 713768, 713803, 714022, 714131, 714151, 714177, 714189, 714199, 714290, 714307, 714345, 714403, 714427, 714483, 714674, 714700, 714719, 714738, 714743, 714766, 714806, 714823, 714845, 714865, 714945, 714962, 714987, 715039, 715048, 715079, 715080, 715090, 715097, 715131, 715164, 715169, 715185, 715192, 715193, 715222, 715226, 715284, 715341, 715482, 715488, 715494, 715512, 715658, 715708, 715775, 715893, 715900, 716055, 716086, 716108, 716408, 716457, 716663, 716680, 716737, 716766, 716911, 717247, 717880, 719287, 719300, 719318, 719517, 719586, 720061, 720081, 720094, 720177, 720181, 720352, 720424, 720570, 720616, 720702, 720778, 720810, 720815, 720839, 720845, 720874, 721100, 721147, 721237, 721483, 721609, 721678, 721771, 722410, 723002, 723021, 723023, 723825, 723874, 724118, 724337, 724502, 724549, 724733, 725174, 725175, 725357, 725364, 725399, 725431, 725444, 725542, 725563, 725567, 725599, 725680, 725712, 725769, 725771, 725779, 725913, 726002, 726345, 726351, 726473, 726606, 726688, 726775, 726830, 726832, 726833, 726837, 726895, 726899, 726925, 726932, 726949, 727063, 727099, 727148, 727358, 727398, 727403, 727423, 727488, 727495, 728823, 728893, 728894, 728917, 729023, 729085, 729089, 729279, 729446, 729552, 729585, 729633, 729634, 729861, 729995, 730288, 730733, 731939, 731944, 731967, 732465, 732474, 732647, 732655, 733489, 733586, 734203, 734216, 734222, 734286, 734392, 734435, 734436, 734470, 734571, 734577, 734672, 734679, 734873, 734917, 734972, 735854, 735989, 736086, 736170, 736266, 736411, 736416, 736531, 736552, 736567, 736616, 737279, 737448, 737469, 737526, 737561, 737622, 737887, 737962, 738095, 738099, 738171, 738293, 738327, 738358, 738477, 738766, 738913, 738918, 738994, 739054, 739163, 739287, 739381, 739390, 739430, 739926, 739955, 740146, 740186, 741034, 741060, 741084, 741097,620305,543433,675925,686671,622841,736637,557217,620795,719312,738058,710683,652323,722271,688785,458162,724248,650322,726463,558840,638258,736028,465121,737170,685576,709022,688169,628859,713016,620244,652304,527793,679775,640857,709954,726399,574417,723267,703426,704111,691698,682638,698943,706636,727369,573868,639020,692520,635057,725761,535060,536626,655926,703917,458503,699893,708053,724096,650724,637663,680594,720233,623917,730283,632711,461552,551030,534670,636423,702926]
    # notfarm_IDs = [273844,273749,271917,231322,230776,180788,264609,172387,241658,157482,267769,139050,51914,219480,39677,184761,164916,92634,105071,92711,38118,47909,50497,51171,255542,255277,253180,317327,312017,312017,313157,271804,271701,255854,230683,231720,233313,233313,334493,334289,317817,187507,189593,189779,190682,192112,201737,202481,216865,141820,151624,150832,169189,169247,161429,172721,174929,179699,182306,183692,74914,109471,135548,87920,136512,118747,133181,105572,141682,33133,55620,74868,203107,201432,201146,199971,202668,203061,199164,190929,190571,187409,181470,169222,169149,162643,171826,172710,180575,118190,121891,131305,133247,134637,135713,136201,138099,138378,138712,141143,151583,161452,29311,31609,33808,47099,285273,53338,285245,285244,285035,51743,287404,98985,283739,90922,113972,114531,115413,287785,79098,79836,287808,291800,294276,307481,311734,312238,312540,313242,313508,313862,314176,314457,314541,314546,314661,315493,315559,315748,317234,317560,347634,347667,349046,349481,114844,113972,109269,109098,107541,106550,106333,103985,99442,1214,1461,32361,33075,33656,33725,45815,88397,50699,53338,59909,64469,64846,73522,74863,272342,267849,265922,261119,254430,249847,241983,204496,201623,201647,193644,193439,192500,191896,189124,188875,188720,188421,188342,188266,188142,171136,171143,171395,171587,171982,43886,172094,187117,187273,41470,187287,44845,169153,170886,169023,170395,170959,169148,171112,170406,170430,170465,170581,41376,40969,40697,27862,10714,180347,180731,181186,181209,181683,181710,181765,183305,186670,186935,187441,187467,187631,187650,187709,187772,188015,174093,174114,174126,174200 ,174218,174296,174429,174461,174519,174721,174928,175127,175434,175441,176623,177449,178662,179633,10773,172524,172530,172541,172564,172660,172750,172857,173071,173144,173181,173359,173770,173782,173885,173913,10728,1455,29374,29879,1676,29297,30478,1037,9177,2001,2078,10294,9982,2463,10354,10672,10636,349110,347555,317385,317137,314653,314135,311911,294407,287733,287442,285313,277293,277235,276938,275368,274582,274094,273694,268744,264207,263907,261179,258325,257780,257130,256830,252502,237823,235143,228331,33741,33978,149846,349110,317385,347555,92367,102569,103208,317137,53303,314653,137810,139034,314135,311911,141660,144064,294407,133626,116399,116513,127397,125214,121881,]
  
    # cantdifine = [112983,102725,94037,93351,349395,280858,293708,210146,209155,209987,209996,208104,206626,75394,105734,33905,116593,33659,192533,38062,200633,206392,214125,230055,33659,33905,112508,143035,161110,113118,157535,157550,201676,214405,221181,230223,232166,264609,259333,137365,94710,92711,92119,33659,65294,116936,113801,138790,117241,200265,199544,199414,164460,166329,161429,116508,129686,135921,141483,141490,141770,142217,150121,157535,157550,116094,90505,96982,99136,292772,92959,96615,110557,116048,91221,90413,84463,88517,33808,194625,194617,193765,191053,188040,187109,186803,675036,685465,693703,694365,694667,721984,31445,30094,19054,294610,293716,283563,282272,277527,257707,235017,234832,230203,221518,20062,75008,135971,105732,88707,134827,90972,92343,90994,140623,140495,294610,293716,135086,]

    # total = len(level1)
    # notcover = [x for x in farm_IDs if x not in level1]
    # print("Didn't predict the correct labels: ",len(notcover))
    # print(notcover)
    # level1 = [x for x in level1 if x not in notfarm_IDs]
    # print("after wrong================================")
    # print(level1)
    # print(len(level1))
    # newprediction = [x for x in level1 if x not in farm_IDs]
    # print("================================")
    # print("                    newprediction: ",len(newprediction))
    # print(newprediction)
    

    Accuracy = (len(overlapriver)+len(overlapfarm))/150
    
    print("TOTAL Accuracy is ",Accuracy)
    print("\n\n")
    if(len(preservation)==0):
        preservation = l1preserve.copy()
    preservation = [x for  x in l1preserve if x in preservation]
    preservation = [x for x in preservation if x not in notfarm_IDs]
    # cantdifine = [110766,113733,158339,156895,156119,138083,137716,161614,138143,177025,127325,233237,114833,219497,220524,110484,81382,78682,74722,53601,55799,88398,42191,111840,113134,41157,283332,282127,250085,237530,265270,237730,294099,241827,294132,205533,203729,204960,201031,207690,202107,221121,158617,164221,230525,139605,142040,203728,202940,194754,291664,292538,194285,110446,78900,107850,76352,59451,92779,51599,75100,75507,75471,38362,42073,45678,84014,134600,135553,207917,207783,207808,75192,40794,40969,40702,43246,29537,112983,102725,94037,93351,349395,280858,293708,210146,209155,209987,209996,208104,206626,75394,105734,33905,116593,33659,192533,38062,200633,206392,214125,230055,33659,33905,112508,143035,161110,113118,157535,157550,201676,214405,221181,230223,232166,264609,259333,137365,94710,92711,92119,33659,65294,116936,113801,138790,117241,200265,199544,199414,164460,166329,161429,116508,129686,135921,141483,141490,141770,142217,150121,157535,157550,116094,90505,96982,99136,292772,92959,96615,110557,116048,91221,90413,84463,88517,33808,194625,194617,193765,191053,188040,187109,186803,675036,685465,693703,694365,694667,721984,31445,30094,19054,294610,293716,283563,282272,277527,257707,235017,234832,230203,221518,20062,75008,135971,105732,88707,134827,90972,92343,90994,140623,140495,294610,293716,135086]
    cantdifine = [110766, 113733, 158339, 156895, 156119, 138083, 137716, 161614, 138143, 177025, 127325, 233237, 114833, 219497, 220524, 110484, 81382, 78682, 74722, 53601, 55799, 88398, 42191, 111840, 113134, 41157, 283332, 282127, 250085, 237530, 265270, 237730, 294099, 241827, 294132, 205533, 203729, 204960, 201031, 207690, 202107, 221121, 158617, 164221, 230525, 139605, 142040, 203728, 202940, 194754, 291664, 292538, 194285, 110446, 78900, 107850, 76352, 59451, 92779, 51599, 75100, 75507, 75471, 38362, 42073, 45678, 84014, 134600, 135553, 207917, 207783, 207808, 75192, 40794, 40969, 40702, 43246, 29537, 112983, 102725, 94037, 93351, 349395, 280858, 293708, 210146, 209155, 209987, 209996, 208104, 206626, 75394, 105734, 33905, 116593, 33659, 192533, 38062, 200633, 206392, 214125, 230055, 33659, 33905, 112508, 143035, 161110, 113118, 157535, 157550, 201676, 214405, 221181, 230223, 232166, 264609, 259333, 137365, 94710, 92711, 92119, 33659, 65294, 116936, 113801, 138790, 117241, 200265, 199544, 199414, 164460, 166329, 161429, 116508, 129686, 135921, 141483, 141490, 141770, 142217, 150121, 157535, 157550, 116094, 90505, 96982, 99136, 292772, 92959, 96615, 110557, 116048, 91221, 90413, 84463, 88517, 33808, 194625, 194617, 193765, 191053, 188040, 187109, 186803, 675036, 685465, 693703, 694365, 694667, 721984, 31445, 30094, 19054, 294610, 293716, 283563, 282272, 277527, 257707, 235017, 234832, 230203, 221518, 20062, 75008, 135971, 105732, 88707, 134827, 90972, 92343, 90994, 140623, 140495, 294610, 293716, 135086, 52213, 54747, 229546, 85900, 86811, 75594, 125403, 125426, 90111, 141543, 222951, 159278, 156437, 155387, 158408]

    preservation = [x for x in preservation if x not in cantdifine]
    
    if(n!=1):
        print("this time left: ",len(preservation))
        print(preservation)
    n = n + 1







